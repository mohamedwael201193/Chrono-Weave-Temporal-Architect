import{OAuthInit as t,OAuthAuthenticate as e,OAuthLink as r,OAuthUnlink as i}from"@privy-io/public-api";import{PrivyClientError as s}from"./Error.mjs";import{createCodeVerifier as a,createStateCode as o,deriveCodeChallengeFromCodeVerifier as n,CODE_VERIFIER_KEY as h,STATE_CODE_KEY as c}from"./pkce.mjs";import"jose";class p{_privyInternal;_storage;_crypto;constructor(t,e,r){this._privyInternal=t,this._storage=e,this._crypto=r}async generateURL(e,r){const i=a(),s=o(),p=await n({codeVerifier:i,digest:this._crypto?.digest});return await Promise.all([this._storage.put(h,i),this._storage.put(c,s)]),this._privyInternal.fetch(t,{body:{redirect_to:r,provider:e,code_challenge:p,state_code:s}})}async loginWithCode(t,r,i,a,o){const[n,p]=await Promise.all([this._storage.get(h),this._storage.get(c)]);if(p!==r)throw this._privyInternal.createAnalyticsEvent("possible_phishing_attempt",{flow:"oauth",provider:i,storedStateCode:p??"",returnedStateCode:r??""}),new s({code:"pkce_state_code_mismatch",error:"Unexpected auth flow. This may be a phishing attempt."});const _=await this._privyInternal.fetch(e,{body:{authorization_code:t,code_type:a,state_code:p,code_verifier:n,mode:o}});return await this._privyInternal.session.updateWithTokensResponse(_),this._privyInternal.callbacks?.setUser?.(_.user),await Promise.all([this._storage.del(h),this._storage.del(c)]),_}async linkWithCode(t,e,i,a){const[o,n]=await Promise.all([this._storage.get(h),this._storage.get(c)]);if(n!==e)throw this._privyInternal.createAnalyticsEvent("possible_phishing_attempt",{flow:"oauth",provider:i,storedStateCode:n??"",returnedStateCode:e??""}),new s({code:"pkce_state_code_mismatch",error:"Unexpected auth flow. This may be a phishing attempt."});const p=await this._privyInternal.fetch(r,{body:{authorization_code:t,code_type:a,state_code:n,code_verifier:o}});await this._privyInternal.session.processOAuthTokens(p.oauth_tokens);const _=await this._privyInternal.refreshSession();return await Promise.all([this._storage.del(h),this._storage.del(c)]),_.user}async unlink(t,e){await this._privyInternal.fetch(i,{body:{provider:t,subject:e}});return(await this._privyInternal.refreshSession()).user}}export{p as default};
