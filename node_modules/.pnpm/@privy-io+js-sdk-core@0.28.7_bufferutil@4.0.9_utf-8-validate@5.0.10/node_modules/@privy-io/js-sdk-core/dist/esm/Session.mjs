import e from"eventemitter3";import{base64url as t}from"jose";import s from"js-cookie";import{Token as r}from"./Token.mjs";const o="privy:token",i="privy-token",n="privy:refresh_token",a="privy-refresh-token",_="privy:id-token",h="privy-id-token",c="privy-session",g="privy:session_transfer_token",k=["storage_cleared","token_cleared","refresh_token_cleared","identity_token_cleared","forked_token_cleared","token_stored","refresh_token_stored","identity_token_stored","oauth_tokens_granted"];class l extends e{static events=k;_storage;_isUsingServerCookies=!1;GUEST_CREDENTIAL_STORAGE_KEY;constructor(e){super(),this._storage=e.storage,this.GUEST_CREDENTIAL_STORAGE_KEY=`privy:guest:${e.appId}`}set isUsingServerCookies(e){this._isUsingServerCookies=e}async getToken(){const e=await this._storage.get(o);try{return"string"==typeof e?new r(e).value:null}catch(e){return console.error(e),await this.destroyLocalState({reason:"getToken_error"}),null}}async getRefreshToken(){const e=await this._storage.get(n);if("string"==typeof e)return e;try{await this.destroyLocalState()}catch(e){console.error(e)}return null}async getIdentityToken(){const e=await this._storage.get(_);return"string"==typeof e?e:null}async getForkedToken(){const e=await this._storage.get(g);return"string"==typeof e?e:null}get mightHaveServerCookies(){try{const e=s.get(c);return void 0!==e&&e.length>0}catch(e){console.error(e)}return!1}hasRefreshCredentials(e,t){return this.mightHaveServerCookies||"string"==typeof e&&"string"==typeof t}async hasRecoveryCredentials(){return"string"==typeof await this.getForkedToken()}tokenIsActive(e){if(!e)return!1;const t=r.parse(e);return null!==t&&!t.isExpired(30)}async destroyLocalState(e){const t=await Promise.all([this._storage.del(o),this._storage.del(n),this._storage.del(_),this._storage.del(this.GUEST_CREDENTIAL_STORAGE_KEY),this.clearForkedToken()]);return e?.reason&&this.emit("storage_cleared",{reason:e.reason}),t}async storeToken(e){if("string"==typeof e){const t=await this._storage.get(o);if(await this._storage.put(o,e),!this._isUsingServerCookies){const t=r.parse(e)?.expiration;s.set(i,e,{sameSite:"Strict",secure:!0,expires:t?new Date(1e3*t):void 0})}t!==e&&this.emit("token_stored",{cookiesEnabled:this._isUsingServerCookies})}else{const e=await this._storage.get(o);await this._storage.del(o),s.remove(i),null!==e&&this.emit("token_cleared",{reason:"set_with_non_string_value"})}}async storeRefreshToken(e){"string"==typeof e?(await this._storage.put(n,e),this._isUsingServerCookies||(s.set(c,"t",{sameSite:"Strict",secure:!0,expires:30}),s.set(a,e,{sameSite:"Strict",secure:!0,expires:30})),this.emit("refresh_token_stored",{cookiesEnabled:this._isUsingServerCookies})):(await this._storage.del(n),s.remove(a),s.remove(c),this.emit("refresh_token_cleared",{reason:"set_with_non_string_value"}))}async updateWithTokensResponse(e){await Promise.all([this.storeToken(e.token),this.storeRefreshToken(e.refresh_token),this.storeIdentityToken(e.identity_token),this.processOAuthTokens(e.oauth_tokens)])}async processOAuthTokens(e){e&&this.emit("oauth_tokens_granted",e)}async storeIdentityToken(e){if("string"==typeof e){const t=await this._storage.get(_);if(await this._storage.put(_,e),!this._isUsingServerCookies){const t=r.parse(e)?.expiration;s.set(h,e,{sameSite:"Strict",secure:!0,expires:t?new Date(1e3*t):void 0})}t!==e&&this.emit("identity_token_stored",{cookiesEnabled:this._isUsingServerCookies})}else{const e=await this._storage.get(_);await this._storage.del(_),s.remove(h),null!==e&&this.emit("identity_token_cleared",{reason:"set_with_non_string_value"})}}async getOrCreateGuestCredential(){const e=this._storage.get(this.GUEST_CREDENTIAL_STORAGE_KEY);if(e&&"string"==typeof e)return e;const s=t.encode(crypto.getRandomValues(new Uint8Array(32)));return await this._storage.put(this.GUEST_CREDENTIAL_STORAGE_KEY,s),s}async clearForkedToken(){await this._storage.del(g)}}export{l as Session};
