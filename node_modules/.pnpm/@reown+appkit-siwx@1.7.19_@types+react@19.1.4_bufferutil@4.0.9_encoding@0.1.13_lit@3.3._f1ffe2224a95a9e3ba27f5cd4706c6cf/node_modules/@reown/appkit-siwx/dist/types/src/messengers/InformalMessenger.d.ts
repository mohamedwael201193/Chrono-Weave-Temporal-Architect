import { type CaipNetworkId } from '@reown/appkit-common';
import { type SIWXMessage } from '@reown/appkit-controllers';
import { SIWXMessenger } from '../core/SIWXMessenger.js';
/**
 * Follow Informal Message template from EIP-4361
 * @see https://eips.ethereum.org/EIPS/eip-4361#informal-message-template
 *
 * @example
 * ```
 * ${scheme}:// ${domain} wants you to sign in with your Ethereum account:
 * ${address}
 *
 * ${statement}
 *
 * URI: ${uri}
 * Version: ${version}
 * Chain ID: ${chain-id}
 * Nonce: ${nonce}
 * Issued At: ${issued-at}
 * Expiration Time: ${expiration-time}
 * Not Before: ${not-before}
 * Request ID: ${request-id}
 * Resources:
 * - ${resources[0]}
 * - ${resources[1]}
 * ...
 * - ${resources[n]}
 * ```
 */
export declare class InformalMessenger extends SIWXMessenger {
    protected readonly version = "1";
    private readonly clearChainIdNamespace;
    constructor({ clearChainIdNamespace, ...params }: InformalMessenger.ConstructorParams);
    /**
     * Get the blockchain name for a given chain ID
     * @param chainId The chain ID to get the blockchain name for
     * @returns The blockchain name
     */
    protected getNetworkName(chainId: CaipNetworkId): string | undefined;
    protected stringify(params: SIWXMessage.Data): string;
}
export declare namespace InformalMessenger {
    type ConstructorParams = SIWXMessenger.ConstructorParams & {
        clearChainIdNamespace?: boolean;
    };
}
