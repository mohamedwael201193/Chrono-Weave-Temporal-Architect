import{FetchError as e}from"ofetch";import{createContext as t,useContext as n}from"react";var i;class a extends Error{toString(){return`${this.type}${this.privyErrorCode?`-${this.privyErrorCode}`:""}: ${this.message}${this.cause?` [cause: ${this.cause}]`:""}`}constructor(e,t,n){super(e),t instanceof Error&&(this.cause=t),this.privyErrorCode=n}}class s extends a{constructor(e,t,n,i,a,s){super(n,i,a),this.type=e,this.status=t,this.data=s}}class r extends a{constructor(e,t,n){super(e,t,n),this.type="client_error"}}class l extends r{constructor(){super("Request timed out",void 0,"client_request_timeout")}}class o extends a{constructor(e,t,n){super(e,t,n),this.type="connector_error"}}const _=t=>{if(t instanceof a)return t;if(!(t instanceof e))return u(t);if(!t.response)return new s("api_error",null,t.message,t);let{type:n,message:i,error:r,code:l}=t.data;return new s(n||"ApiError",t.response.status,i||r,t,l,t.data)},u=e=>e instanceof a?e:e instanceof Error?new r(e.message,e):new r(`Internal error: ${e}`);var d;(i=d||(d={})).OAUTH_ACCOUNT_SUSPENDED="oauth_account_suspended",i.MISSING_OR_INVALID_PRIVY_APP_ID="missing_or_invalid_privy_app_id",i.MISSING_OR_INVALID_PRIVY_ACCOUNT_ID="missing_or_invalid_privy_account_id",i.MISSING_OR_INVALID_TOKEN="missing_or_invalid_token",i.INVALID_DATA="invalid_data",i.INVALID_CAPTCHA="invalid_captcha",i.LINKED_TO_ANOTHER_USER="linked_to_another_user",i.CANNOT_LINK_MORE_OF_TYPE="cannot_link_more_of_type",i.FAILED_TO_LINK_ACCOUNT="failed_to_link_account",i.ALLOWLIST_REJECTED="allowlist_rejected",i.OAUTH_USER_DENIED="oauth_user_denied",i.OAUTH_UNEXPECTED="oauth_unexpected",i.UNKNOWN_AUTH_ERROR="unknown_auth_error",i.USER_EXITED_AUTH_FLOW="exited_auth_flow",i.USER_EXITED_LINK_FLOW="exited_link_flow",i.USER_EXITED_SET_PASSWORD_FLOW="user_exited_set_password_flow",i.MUST_BE_AUTHENTICATED="must_be_authenticated",i.UNKNOWN_CONNECT_WALLET_ERROR="unknown_connect_wallet_error",i.GENERIC_CONNECT_WALLET_ERROR="generic_connect_wallet_error",i.CLIENT_REQUEST_TIMEOUT="client_request_timeout",i.INVALID_CREDENTIALS="invalid_credentials",i.MISSING_MFA_CREDENTIALS="missing_or_invalid_mfa",i.UNKNOWN_MFA_ERROR="unknown_mfa_error",i.EMBEDDED_WALLET_ALREADY_EXISTS="embedded_wallet_already_exists",i.EMBEDDED_WALLET_NOT_FOUND="embedded_wallet_not_found",i.UNKNOWN_EMBEDDED_WALLET_ERROR="unknown_embedded_wallet_error",i.EMBEDDED_WALLET_PASSWORD_UNCONFIRMED="embedded_wallet_password_unconfirmed",i.EMBEDDED_WALLET_PASSWORD_ALREADY_EXISTS="embedded_wallet_password_already_exists",i.EMBEDDED_WALLET_RECOVERY_ALREADY_EXISTS="embedded_wallet_recovery_already_exists",i.TRANSACTION_FAILURE="transaction_failure",i.UNSUPPORTED_CHAIN_ID="unsupported_chain_id",i.NOT_SUPPORTED="not_supported",i.CAPTCHA_TIMEOUT="captcha_timeout",i.INVALID_MESSAGE="invalid_message",i.UNABLE_TO_SIGN="unable_to_sign",i.CAPTCHA_FAILURE="captcha_failure",i.CAPTCHA_DISABLED="captcha_disabled",i.SESSION_STORAGE_UNAVAILABLE="session_storage_unavailable",i.TOO_MANY_REQUESTS="too_many_requests",i.USER_LIMIT_REACHED="max_accounts_reached",i.DISALLOWED_LOGIN_METHOD="disallowed_login_method",i.PASSKEY_NOT_ALLOWED="passkey_not_allowed",i.USER_DOES_NOT_EXIST="user_does_not_exist",i.INSUFFICIENT_BALANCE="insufficient_balance",i.ACCOUNT_TRANSFER_REQUIRED="account_transfer_required";class c extends r{constructor(){super("Method called before `ready`. Ensure you wait until `ready` is true before calling.")}}class E extends r{constructor(e="Embedded wallet error",t){super(e,t,"unknown_embedded_wallet_error")}}class A extends r{constructor(e="User must be authenticated"){super(e,void 0,"must_be_authenticated")}}class h extends r{constructor(e){super("This application is in development mode and must be upgraded to production to log in new users.",e,"max_accounts_reached")}}const p=()=>{throw Error("You need to wrap your application with the <PrivyProvider> initialized with your app id.")},S=t({isNewUserThisSession:!1,walletConnectionStatus:null,connectors:[],solanaWallets:[],rpcConfig:{rpcUrls:{}},showFiatPrices:!0,chains:[],clientAnalyticsId:null,pendingTransaction:null,client:null,appId:"notAdded",customAuthStatus:{status:"not-enabled"},noPromptOnSignature:{current:!1},nativeTokenSymbolForChainId:p,initializeWalletProxy:p,getAuthMeta:p,getAuthFlow:p,closePrivyModal:p,openPrivyModal:p,connectWallet:p,initLoginWithWallet:p,loginWithWallet:p,initLoginWithFarcaster:p,loginWithFarcaster:p,loginWithCode:p,initLoginWithEmail:p,initLoginWithSms:p,initUpdateEmail:p,initUpdatePhone:p,resendEmailCode:p,resendSmsCode:p,initLoginWithHeadlessOAuth:p,loginWithHeadlessOAuth:p,crossAppAuthFlow:p,initLoginWithOAuth:p,recoveryOAuthFlow:p,loginWithOAuth:p,passkeyAuthState:{status:"initial"},setPasskeyAuthState:p,initLoginWithPasskey:p,loginWithPasskey:p,initLinkWithPasskey:p,linkWithPasskey:p,refreshUser:p,loginWithGuestAccountFlow:p,walletProxy:null,createAnalyticsEvent:p,acceptTerms:p,getUsdTokenPrice:p,getUsdPriceForSol:p,recoverEmbeddedEthereumWallet:p,getMoonpaySignedUrl:p,initCoinbaseOnRamp:p,getCoinbaseOnRampStatus:p,updateWallets:p,fundWallet:p,setReadyToTrue:p,requestFarcasterSignerStatus:p,initLoginWithTelegram:p,loginWithTelegram:p,generateSiweMessage:p,generateSiweMessageForSmartWallet:p,linkWithSiwe:p,linkSmartWallet:p,initDelegateAction:p,embeddedSolanaWallet:null,createEmbeddedSolanaWallet:p,recoverEmbeddedSolanaWallet:p,exportSolanaWallet:p,solanaSignMessage:p,connectCoinbaseSmartWallet:p,initiateAccountTransfer:p,emailOtpState:{status:"initial"},setEmailOtpState:p,smsOtpState:{status:"initial"},setSmsOtpState:p,siweState:{status:"initial"},setSiweState:p,oAuthState:{status:"initial"},setOAuthState:p}),T=()=>n(S),m=t({ready:!1,authenticated:!1,user:null,walletConnectors:null,connectWallet:p,login:p,connectOrCreateWallet:p,linkEmail:p,linkPhone:p,linkFarcaster:p,linkWallet:p,startCrossAppAuthFlow:p,linkGoogle:p,linkTwitter:p,linkDiscord:p,linkGithub:p,linkSpotify:p,linkInstagram:p,linkTelegram:p,linkTiktok:p,linkLinkedIn:p,linkApple:p,linkPasskey:p,updateEmail:p,updatePhone:p,logout:p,getAccessToken:p,getEthereumProvider:p,getEthersProvider:p,getWeb3jsProvider:p,unlinkEmail:p,unlinkPhone:p,unlinkWallet:p,unlinkGoogle:p,unlinkTwitter:p,unlinkDiscord:p,unlinkGithub:p,unlinkSpotify:p,unlinkInstagram:p,unlinkTiktok:p,unlinkLinkedIn:p,unlinkApple:p,unlinkCrossAppAccount:p,unlinkFarcaster:p,unlinkTelegram:p,unlinkPasskey:p,setActiveWallet:p,forkSession:p,createWallet:p,importWallet:p,signMessage:p,signTypedData:p,enrollInMfa:p,initEnrollmentWithSms:p,initEnrollmentWithTotp:p,initEnrollmentWithPasskey:p,promptMfa:p,init:p,submitEnrollmentWithSms:p,submitEnrollmentWithTotp:p,submitEnrollmentWithPasskey:p,unenroll:p,submit:p,cancel:p,sendTransaction:p,sendSolanaTransaction:p,exportWallet:p,setWalletPassword:p,setWalletRecovery:p,requestFarcasterSignerFromWarpcast:p,getFarcasterSignerPublicKey:p,signFarcasterMessage:p,createGuestAccount:p,initLoginWithEmail:p,initLoginWithSms:p,otpState:{status:"initial"},loginWithCode:p,fundWallet:p,initLoginWithHeadlessOAuth:p,loginWithHeadlessOAuth:p,generateSiweMessage:p,linkWithSiwe:p,signMessageWithCrossAppWallet:p,signTypedDataWithCrossAppWallet:p,sendTransactionWithCrossAppWallet:p,isHeadlessOAuthLoading:!1,isModalOpen:!1,mfaMethods:[]}),W=()=>n(m);export{S as I,r as P,d as a,a as b,o as c,l as d,u as e,_ as f,s as g,W as h,h as i,E as j,A as k,m as l,c as m,p as n,T as u};
