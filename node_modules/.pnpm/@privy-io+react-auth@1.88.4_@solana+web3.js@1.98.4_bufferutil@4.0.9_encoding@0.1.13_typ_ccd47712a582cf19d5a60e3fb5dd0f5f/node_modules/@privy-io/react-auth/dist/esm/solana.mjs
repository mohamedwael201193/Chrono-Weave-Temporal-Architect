import{isWalletAdapterCompatibleStandardWallet as t}from"@solana/wallet-adapter-base";import{StandardWalletAdapter as e}from"@solana/wallet-standard-wallet-adapter-base";import{getWallets as o}from"@wallet-standard/app";import{S as a}from"./useSolanaWallets.mjs";export{u as useSolanaWallets}from"./useSolanaWallets.mjs";import"./privy-context.mjs";import"ofetch";import"react";import"@ethersproject/logger";import"eventemitter3";import"./user.mjs";import"@ethersproject/address";const r=t=>{let e,{get:r,on:l}=o(),n=t?.shouldAutoConnect??!0,p=s(r()),m=p.map((t=>new a(t,n))),i=[];return{_setOnConnectorsUpdated:t=>{e=t},onMount:()=>{i.push(l("register",((...t)=>{m=(p=p.concat(...s(t))).map((t=>new a(t,n))),e?.(m)})),l("unregister",((...t)=>{m=(p=p.filter((e=>t.some((t=>e.wallet===t))))).map((t=>new a(t,n))),e?.(m)})))},onUnmount:()=>{let t=i.pop();for(;t;)t(),t=i.pop()},get:()=>m}};let s=o=>o.filter(t).map((t=>new e({wallet:t})));export{a as SolanaAdapterConnector,r as toSolanaWalletConnectors};
