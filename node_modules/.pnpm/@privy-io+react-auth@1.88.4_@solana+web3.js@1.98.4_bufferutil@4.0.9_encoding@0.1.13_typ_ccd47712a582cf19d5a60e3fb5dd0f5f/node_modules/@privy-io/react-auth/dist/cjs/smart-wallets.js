"use strict";var e=require("react/jsx-runtime"),t=require("react"),r=require("./useWallets.js"),a=require("./privy-context.js"),n=require("./getEmbeddedConnectedWallet.js"),i=require("permissionless"),s=require("permissionless/accounts"),o=require("permissionless/clients/pimlico"),l=require("viem"),c=require("viem/account-abstraction");require("tinycolor2"),require("ofetch");let u=({calls:e,chain:t,maxPriorityFeePerGas:r,maxFeePerGas:a,nonce:n})=>e.map((e=>({to:e.to||void 0,data:e.data,value:e.value,chainId:t.id,nonce:n,maxFeePerGas:a,maxPriorityFeePerGas:r})));let d={address:c.entryPoint06Address,version:"0.6"},m={address:c.entryPoint07Address,version:"0.7"},y=async({owner:e,smartWalletType:t,chain:r,bundlerUrl:a,paymasterUrl:n,paymasterContext:c})=>{let u=l.createPublicClient({chain:r,transport:l.http()}),y=await(({owner:e,smartWalletType:t,chain:r})=>{let a=l.createPublicClient({chain:r,transport:l.http()});switch(t){case"safe":return s.toSafeSmartAccount({client:a,entryPoint:m,owners:[e],version:"1.4.1"});case"kernel":return s.toEcdsaKernelSmartAccount({client:a,version:"0.3.1",entryPoint:m,owners:[e]});case"biconomy":return s.toBiconomySmartAccount({client:a,owners:[e],entryPoint:d});case"light_account":return s.toLightSmartAccount({client:a,entryPoint:d,owner:e,version:"1.1.0"});default:throw Error(`Invalid smart account type: ${t}.`)}})({owner:e,smartWalletType:t,chain:r}),p=n?o.createPimlicoClient({transport:l.http(n),entryPoint:y.entryPoint}):void 0;return i.createSmartAccountClient({account:y,chain:r,paymaster:p,paymasterContext:c,bundlerTransport:l.http(a),userOperation:{estimateFeesPerGas:async()=>{let e=await u.estimateFeesPerGas();return{...e,maxFeePerGas:125n*e.maxFeePerGas/100n,maxPriorityFeePerGas:125n*e.maxPriorityFeePerGas/100n}}}})};let p=t.createContext({client:void 0});let g=t.createContext({config:void 0}),P=()=>{let{config:e}=t.useContext(g);return{config:e}},E=({children:r})=>{let[n,i]=t.useState(void 0),{client:s}=a.usePrivyInternal();return t.useEffect((()=>{!n&&s&&(async()=>{try{if(!s)return void console.warn("No client found");let e=await s.getSmartWalletsConfig();i(e)}catch(e){console.warn("Error generating smart wallet config: ",e)}})()}),[!!s]),e.jsx(g.Provider,{value:{config:n},children:r})},h=({config:i,children:s})=>{let{config:o}=P(),{defaultChain:l}=r.useAppConfig(),[c]=t.useState(l),{wallets:u}=r.useWallets(),{user:d}=a.usePrivy(),[m,p]=t.useState(),g=n.getEmbeddedConnectedWallet(u);return t.useEffect((()=>{(async()=>{if(!o?.enabled||!d||!g)return void p(void 0);if(m&&m.chain.id===c.id)return;let e=o.configuredNetworks.find((e=>e.chainId===`eip155:${c.id}`));if(!e)throw new a.PrivyClientError(`The chain ${c.name} (eip155:${c.id}) must be configured in the smart wallet configuration in your dashboard`);let t=d.smartWallet?.smartWalletType??o.smartWalletType;try{let r=await(async(e,t,r,a,n)=>{let i=await e.getEthereumProvider();return await y({owner:i,smartWalletType:r,chain:t,paymasterContext:n,...a})})(g,c,t,e,i?.paymasterContext);p(r)}catch(e){console.error("Error loading smart wallet:",e)}})()}),[!!o?.enabled,!!d?.smartWallet,!!g]),e.jsx(v.Provider,{value:{client:m},children:s})},v=t.createContext({client:void 0}),S=({children:i})=>{let{client:s}=(()=>{let{client:e}=t.useContext(v);return{client:e}})(),{config:o}=P(),{wrapSmartAccountClient:l}=(()=>{let{noPromptOnSignature:e,openPrivyModal:t}=a.usePrivyInternal(),i=r.useAppConfig(),{setModalData:s}=n.usePrivyModal();return{wrapSmartAccountClient:r=>{let{sendTransaction:a,signMessage:o,signTypedData:l,...c}=r;return{...c,sendTransaction:async r=>{if(i.embeddedWallets.noPromptOnSignature||e.current)return await a(r);let o=[];"calls"in r&&void 0!==r.calls?o=[...r.calls]:"to"in r&&(o=[{to:r.to,value:r.value||BigInt(0),data:r.data||"0x"}]);let l=async()=>{if(!c.paymaster)return!1;let{paymasterAndData:e,paymasterData:t}=await c.prepareUserOperation({calls:o,maxFeePerGas:r.maxFeePerGas,maxPriorityFeePerGas:r.maxPriorityFeePerGas,nonce:r.nonce?BigInt(r.nonce):void 0});return Number(e??t??0)>0};return new Promise((async(i,d)=>{e.current=!0,s({connectWallet:{onCompleteNavigateTo:n.ModalScreen.EMBEDDED_WALLET_SEND_TRANSACTION_SCREEN,onFailure:()=>{}},sendTransaction:{transactionRequests:u({calls:o,chain:c.chain,maxPriorityFeePerGas:r.maxPriorityFeePerGas,maxFeePerGas:r.maxFeePerGas,nonce:r.nonce?BigInt(r.nonce):void 0}),rootWallet:{address:c.account.address},transactingWallet:{address:c.account.address,walletIndex:null},getIsSponsored:l,onConfirm:()=>a(r),onSuccess:e=>i(e.hash),onFailure:d,uiOptions:{}}}),t(n.ModalScreen.EMBEDDED_WALLET_CONNECTING_SCREEN)})).finally((()=>{e.current=!1}))},signMessage:async({message:r})=>i.embeddedWallets.noPromptOnSignature||e.current?await o({message:r}):new Promise((async(a,i)=>{e.current=!0,s({connectWallet:{onCompleteNavigateTo:n.ModalScreen.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,onFailure:()=>{}},signMessage:{method:"personal_sign",data:r,confirmAndSign:()=>o({message:r}),onSuccess:e=>a(e),onFailure:i,uiOptions:{}}}),t(n.ModalScreen.EMBEDDED_WALLET_CONNECTING_SCREEN)})).finally((()=>{e.current=!1})),signTypedData:async r=>e.current?await l(r):new Promise((async(a,i)=>{e.current=!0,s({connectWallet:{onCompleteNavigateTo:n.ModalScreen.EMBEDDED_WALLET_SIGN_REQUEST_SCREEN,onFailure:()=>{}},signMessage:{method:"eth_signTypedData_v4",data:r,confirmAndSign:()=>l(r),onSuccess:e=>a(e),onFailure:i,uiOptions:{}}}),t(n.ModalScreen.EMBEDDED_WALLET_CONNECTING_SCREEN)})).finally((()=>{e.current=!1}))}}}})(),{user:c}=a.usePrivy(),{generateSiweMessageForSmartWallet:d,linkSmartWallet:m,noPromptOnSignature:y}=a.usePrivyInternal();return t.useEffect((()=>{(async()=>{if(s&&!c?.smartWallet&&o?.enabled)try{let e=await d({address:s.account.address,chainId:`eip155:${s.chain.id}`});y.current=!0;let t=await s.signMessage({message:e});await m({signature:t,message:e,smartWalletType:o.smartWalletType})}catch(e){console.error("Error creating smart wallet:",e)}finally{y.current=!1}})()}),[!!s,!!c?.smartWallet,!!o?.enabled]),e.jsx(p.Provider,{value:{client:c?.smartWallet&&s?l(s):void 0},children:i})};exports.SmartWalletsProvider=({config:t,children:r})=>e.jsx(E,{children:e.jsx(h,{config:t,children:e.jsx(S,{children:r})})}),exports.useSmartWallets=()=>{let{client:e}=t.useContext(p);return{client:e}};
