"use strict";var e=require("@solana/wallet-adapter-base"),t=require("@solana/wallet-standard-wallet-adapter-base"),a=require("@wallet-standard/app"),r=require("./useSolanaWallets.js");require("./privy-context.js"),require("ofetch"),require("react"),require("@ethersproject/logger"),require("eventemitter3"),require("./user.js"),require("@ethersproject/address");let l=a=>a.filter(e.isWalletAdapterCompatibleStandardWallet).map((e=>new t.StandardWalletAdapter({wallet:e})));exports.SolanaAdapterConnector=r.SolanaWalletConnector,exports.useSolanaWallets=r.useSolanaWallets,exports.toSolanaWalletConnectors=e=>{let t,{get:o,on:n}=a.getWallets(),s=e?.shouldAutoConnect??!0,p=l(o()),u=p.map((e=>new r.SolanaWalletConnector(e,s))),i=[];return{_setOnConnectorsUpdated:e=>{t=e},onMount:()=>{i.push(n("register",((...e)=>{u=(p=p.concat(...l(e))).map((e=>new r.SolanaWalletConnector(e,s))),t?.(u)})),n("unregister",((...e)=>{u=(p=p.filter((t=>e.some((e=>t.wallet===e))))).map((e=>new r.SolanaWalletConnector(e,s))),t?.(u)})))},onUnmount:()=>{let e=i.pop();for(;e;)e(),e=i.pop()},get:()=>u}};
