import{SiwsUnlink as e,SiwsLink as t,SiwsAuthenticate as s,SiwsInit as i}from"@privy-io/public-api";import{maybeCreateWalletOnLogin as r}from"./maybeCreateWalletOnLogin.mjs";import"../../utils/getUserEmbeddedEthereumWallet.mjs";import"../../utils/getAllUserEmbeddedEthereumWallets.mjs";import"../../utils/embedded-wallets.mjs";import"../../utils/getUserEmbeddedSolanaWallet.mjs";import"../../utils/getAllUserEmbeddedSolanaWallets.mjs";import"../../utils/shouldCreateEmbeddedEthWallet.mjs";import"../../utils/shouldCreateEmbeddedSolWallet.mjs";class n{async unlink({address:t}){await this._privyInternal.fetch(e,{body:{address:t}});let s=await this._privyInternal.refreshSession();return{user:s.user,identity_token:s.identity_token}}async link({message:e,signature:s,walletClientType:i,connectorType:r}){await this._privyInternal.fetch(t,{body:{message:e,signature:s,walletClientType:i,connectorType:r}});let n=await this._privyInternal.refreshSession();return{user:n.user,identity_token:n.identity_token}}async login({mode:e,message:t,signature:i,walletClientType:n,connectorType:a,opts:l}){let d=await this._privyInternal.fetch(s,{body:{signature:i,message:t,walletClientType:n,connectorType:a,mode:e}});await this._privyInternal.session.updateWithTokensResponse(d);let o=await r(this._embedded,d,l?.embedded);return this._privyInternal.callbacks?.setUser?.(o.user),o}async fetchNonce({address:e}){let{nonce:t}=await this._privyInternal.fetch(i,{body:{address:e}});return{nonce:t}}constructor(e,t){this._privyInternal=e,this._embedded=t}}export{n as default};
