"use strict";var t=require("react");const e=()=>{throw Error("You need to wrap your application with the <PrivyProvider> initialized with your app id.")},i=/*#__PURE__*/t.createContext({setAuthenticated:e,setUser:e,setIsNewUser:e,isNewUserThisSession:!1,walletConnectionStatus:null,setWalletConnectionStatus:e,connectors:[],solanaWallets:[],rpcConfig:{rpcUrls:{}},showFiatPrices:!0,chains:[],clientAnalyticsId:null,pendingTransaction:null,client:null,privy:null,appId:"notAdded",onCustomAuthAuthenticated:e,hideWalletUIs:{current:!1},nativeTokenSymbolForChainId:e,initializeWalletProxy:e,getAuthMeta:e,getAuthFlow:e,closePrivyModal:e,openPrivyModal:e,connectWallet:e,initLoginWithWallet:e,loginWithWallet:e,initLoginWithFarcaster:e,loginWithFarcaster:e,loginWithCode:e,initLoginWithEmail:e,initLoginWithSms:e,initUpdateEmail:e,initUpdatePhone:e,resendEmailCode:e,resendSmsCode:e,initLoginWithHeadlessOAuth:e,loginWithHeadlessOAuth:e,crossAppAuthFlow:e,initLoginWithOAuth:e,loginWithOAuth:e,passkeyAuthState:{status:"initial"},setPasskeyAuthState:e,initSignupWithPasskey:e,signupWithPasskey:e,initLoginWithPasskey:e,loginWithPasskey:e,initLinkWithPasskey:e,linkWithPasskey:e,refreshSessionAndUser:e,walletProxy:null,createAnalyticsEvent:e,acceptTerms:e,getUsdTokenPrice:e,getUsdPriceForSol:e,getSplTokenMetadata:e,recoverEmbeddedWallet:e,updateWallets:e,fundWallet:e,openModal:e,setReadyToTrue:e,requestFarcasterSignerStatus:e,initLoginWithTelegram:e,loginWithTelegram:e,generateSiweMessage:e,generateSiweMessageForSmartWallet:e,loginWithSiwe:e,linkWithSiwe:e,linkSmartWallet:e,delegateWallet:e,revokeDelegatedWallets:e,exportSolanaWallet:e,connectCoinbaseSmartWallet:e,connectBaseAccount:e,initiateAccountTransfer:e,emailOtpState:{status:"initial"},setEmailOtpState:e,smsOtpState:{status:"initial"},setSmsOtpState:e,siweState:{status:"initial"},setSiweState:e,oAuthState:{status:"initial"},setOAuthState:e,telegramAuthState:{status:"initial"},setTelegramAuthState:e,isHeadlessOAuthLoading:!1,isHeadlessSigning:e,inProgressAuthFlowRef:{current:null},inProgressLoginOrLinkMethodRef:{current:null},baseAccountSdk:void 0,setBaseAccountSdk:e});exports.InternalPrivyContext=i,exports.notImplemented=e,exports.notImplementedWithMessage=t=>()=>{throw Error(t.trim())},exports.usePrivyInternal=()=>t.useContext(i);
